{"version":3,"sources":["actions/listAction.js","actions/cardAction.js","actions/index.js","reducers/listsReducer.js","reducers/index.js","store/index.js","components/BoardCard/BoardCard.js","components/BoardAddButton/BoardAddButton.js","components/BoardList/BoardList.js","components/Menu/Menu.js","components/BoardMenu/BoardMenu.js","components/App.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","reOrder","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_CARD","addCard","listId","content","ADD_CARD","cardId","initialState","id","cards","listsReducer","state","action","newList","newCard","newState","map","list","find","card","splice","listStart","listEnd","combineReducers","lists","store","createStore","rootReducer","BoardCard","index","String","provided","ref","innerRef","draggableProps","dragHandleProps","Card","className","CardContent","Typography","gutterBottom","BoardAddButton","formHidden","showForm","setState","hideForm","handleInputChange","e","target","value","handleAddList","dispatch","props","handleAddCard","renderAddButton","buttonType","onClick","Icon","renderForm","placeholder","buttonText","autoFocus","onBlur","onChange","Button","variant","onMouseDown","style","marginLeft","cursor","this","React","Component","connect","BoardList","droppableId","droppableProps","key","Menu","menuHidden","showMenu","hideMenu","src","alt","renderMenu","BoardMenu","favoriteBoard","markFavorite","position","fontSize","App","onDragEnd","result","destination","source","ReactDOM","render","document","getElementById"],"mappings":"2RAEaA,EAAU,SAAAC,GACrB,MAAO,CACLC,KAAMC,EAAUC,SAChBC,QAASJ,IAIAK,EAAU,SACrBC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACLT,KAAMC,EAAUS,UAChBP,QAAS,CACPE,mBACAC,iBACAC,sBACAC,oBACAC,iBCrBOE,EAAU,SAACC,EAAQC,GAC9B,MAAO,CACLb,KAAMC,EAAUa,SAChBX,QAAS,CAAEU,UAASD,YCFXX,EAAY,CACvBa,SAAU,WACVZ,SAAU,WACVQ,UAAW,a,yjBCJb,IAAIE,EAAS,EACTG,EAAS,EAEPC,EAAe,CACnB,CACEjB,MAAO,QACPkB,GAAG,KAAD,OAAO,GACTC,MAAO,CACL,CAAED,GAAG,KAAD,OAAO,GAAKJ,QAAS,gBACzB,CAAEI,GAAG,KAAD,OAAO,GAAKJ,QAAS,YACzB,CAAEI,GAAG,KAAD,OAAO,GAAKJ,QAAS,yBACzB,CAAEI,GAAG,KAAD,OAAO,GAAKJ,QAAS,0BAG7B,CACEd,MAAO,QACPkB,GAAG,KAAD,OAAO,GACTC,MAAO,CAAC,CAAED,GAAG,KAAD,OAAO,GAAKJ,QAAS,aAEnC,CACEd,MAAO,OACPkB,GAAG,KAAD,OAAO,GACTC,MAAO,CACL,CAAED,GAAG,KAAD,OAAO,GAAKJ,QAAS,kBACzB,CAAEI,GAAG,KAAD,OAAO,GAAKJ,QAAS,iBACzB,CAAEI,GAAG,KAAD,OAAO,GAAKJ,QAAS,0BACzB,CAAEI,GAAG,KAAD,OAAO,GAAKJ,QAAS,2BAgFhBM,EA3EM,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACrD,OAAQA,EAAOrB,MACb,KAAKC,EAAUC,SACb,IAAMoB,EAAU,CACdvB,MAAOsB,EAAOlB,QACde,MAAO,GACPD,GAAG,KAAD,OAAOL,IAGX,OADAA,GAAU,EACJ,GAAN,mBAAWQ,GAAX,CAAkBE,IAEpB,KAAKrB,EAAUa,SACb,IAAMS,EAAU,CACdV,QAASQ,EAAOlB,QAAQU,QACxBI,GAAG,KAAD,OAAOF,IAEXA,GAAU,EAEV,IAAMS,EAAWJ,EAAMK,KAAI,SAAAC,GACzB,OAAIA,EAAKT,KAAOI,EAAOlB,QAAQS,OACtB,EAAP,GACKc,EADL,CAEER,MAAM,GAAD,mBAAMQ,EAAKR,OAAX,CAAkBK,MAGlBG,KAIX,OAAOF,EAGT,KAAKvB,EAAUS,UAAf,MAOMW,EAAOlB,QALTE,EAFJ,EAEIA,iBACAC,EAHJ,EAGIA,eACAC,EAJJ,EAIIA,oBACAC,EALJ,EAKIA,kBAGIgB,GARR,EAMIf,YAEY,YAAOW,IAGrB,GAAIf,IAAqBC,EAAgB,CAAC,IAAD,EAEjCoB,EAAON,EAAMO,MAAK,SAAAD,GAAI,OAAIrB,IAAqBqB,EAAKT,MAGpDW,EAAOF,EAAKR,MAAMW,OAAOtB,EAAqB,IAGpD,EAAAmB,EAAKR,OAAMW,OAAX,SAAkBrB,EAAmB,GAArC,mBAA2CoB,KAI7C,GAAIvB,IAAqBC,EAAgB,CAAC,IAAD,EAEjCwB,EAAYV,EAAMO,MAAK,SAAAD,GAAI,OAAIrB,IAAqBqB,EAAKT,MAGzDW,EAAOE,EAAUZ,MAAMW,OAAOtB,EAAqB,GAGnDwB,EAAUX,EAAMO,MAAK,SAAAD,GAAI,OAAIpB,IAAmBoB,EAAKT,OAG3D,EAAAc,EAAQb,OAAMW,OAAd,SAAqBrB,EAAmB,GAAxC,mBAA8CoB,KAEhD,OAAOJ,EAET,QACE,OAAOJ,ICrGEY,cAAgB,CAC3BC,MAAOd,ICCIe,EAFDC,YAAYC,G,0ECyBXC,G,MApBG,SAAC,GAA4B,IAA1BxB,EAAyB,EAAzBA,QAASI,EAAgB,EAAhBA,GAAIqB,EAAY,EAAZA,MAChC,OACE,kBAAC,IAAD,CAAW7B,YAAa8B,OAAOtB,GAAKqB,MAAOA,IACxC,SAAAE,GAAQ,OACP,uCACEC,IAAKD,EAASE,UACVF,EAASG,eACTH,EAASI,iBAEb,kBAACC,EAAA,EAAD,CAAMC,UAAU,kBACd,kBAACC,EAAA,EAAD,CAAaD,UAAU,cACrB,kBAACE,EAAA,EAAD,CAAYC,cAAY,GAAEpC,W,0BCTlCqC,G,kNACJ9B,MAAQ,CACN+B,YAAY,G,EAGdC,SAAW,WACT,EAAKC,SAAS,CACZF,YAAY,K,EAIhBG,SAAW,WACT,EAAKD,SAAS,CACZF,YAAY,K,EAIhBI,kBAAoB,SAAAC,GAClB,EAAKH,SAAS,CACZxC,QAAS2C,EAAEC,OAAOC,S,EAItBC,cAAgB,WAAO,IACbC,EAAa,EAAKC,MAAlBD,SACA/C,EAAY,EAAKO,MAAjBP,QAEJA,IAEF,EAAKwC,SAAS,CACZxC,QAAS,KAGX+C,EAAS9D,EAAQe,M,EAMrBiD,cAAgB,WAAO,IAAD,EACS,EAAKD,MAA1BD,EADY,EACZA,SAAUhD,EADE,EACFA,OACVC,EAAY,EAAKO,MAAjBP,QAEJA,IAEF,EAAKwC,SAAS,CACZxC,QAAS,KAGX+C,EAASjD,EAAQC,EAAQC,M,EAI7BkD,gBAAkB,WAAO,IACfrC,EAAS,EAAKmC,MAAdnC,KACFsC,EAAatC,EAAO,mBAAqB,mBAE/C,OACE,yBACEuC,QAAS,EAAKb,SACdN,UACE,eAAiBpB,EAAO,kBAAoB,oBAG9C,kBAACwC,EAAA,EAAD,YACA,2BAAIF,K,EAKVG,WAAa,WAAO,IACVzC,EAAS,EAAKmC,MAAdnC,KAEF0C,EAAc1C,EAChB,sBACA,iCACE2C,EAAa3C,EAAO,WAAa,WAEvC,OACE,6BACE,kBAACmB,EAAA,EAAD,CAAMC,UAAU,sBACd,kBAAC,IAAD,CACEA,UAAU,YACVsB,YAAaA,EACbE,WAAS,EACTC,OAAQ,EAAKjB,SACbI,MAAO,EAAKtC,MAAMP,QAClB2D,SAAU,EAAKjB,qBAGnB,yBAAKT,UAAU,yBACb,kBAAC2B,EAAA,EAAD,CACE3B,UAAU,cACV4B,QAAQ,YACRC,YAAajD,EAAO,EAAKiC,cAAgB,EAAKG,eAE7CO,GAEH,kBAACH,EAAA,EAAD,CAAMU,MAAO,CAAEC,WAAY,EAAGC,OAAQ,YAAtC,Y,wEAON,OAAOC,KAAK3D,MAAM+B,WAAa4B,KAAKhB,kBAAoBgB,KAAKZ,iB,GAzGpCa,IAAMC,YA6GpBC,gBAAUhC,GCtFViC,G,OA1BG,SAAC,GAA8B,IAA5BpF,EAA2B,EAA3BA,MAAOmB,EAAoB,EAApBA,MAAON,EAAa,EAAbA,OACjC,OACE,kBAAC,IAAD,CAAWwE,YAAa7C,OAAO3B,KAC5B,SAAA4B,GAAQ,OACP,yCACMA,EAAS6C,eADf,CAEE5C,IAAKD,EAASE,SACdI,UAAU,cAEV,uBAAGA,UAAU,oBAAoB/C,GAChCmB,EAAMO,KAAI,SAACG,EAAMU,GAAP,OACT,kBAAC,EAAD,CACEgD,IAAK1D,EAAKX,GACVqB,MAAOA,EACPzB,QAASe,EAAKf,QACdI,GAAIW,EAAKX,QAGb,kBAAC,EAAD,CAAgBL,OAAQA,IACvB4B,EAAS4B,kB,mDC8CLmB,G,kNAhEbnE,MAAQ,CACNoE,YAAY,G,EAGdC,SAAW,WACT,EAAKpC,SAAS,CACZmC,YAAY,K,EAIhBE,SAAW,WACT,EAAKrC,SAAS,CACZmC,YAAY,K,4EAKd,OACE,yBAAK1C,UAAU,kBACb,0BAAMmB,QAASc,KAAKW,UAApB,UACA,yBAAK5C,UAAU,eACb,oCAEF,yBAAKA,UAAU,WACb,yBAAKA,UAAU,iBACb,yBAAK6C,IAAI,iDAAiDC,IAAI,KAC9D,yBACED,IAAI,mDACJC,IAAI,KAEN,yBAAKD,IAAI,kDAAkDC,IAAI,KAC/D,yBAAKD,IAAI,iDAAiDC,IAAI,MAGhE,yBAAK9C,UAAU,0BACb,kBAAC,IAAD,CAAuBA,UAAU,eACjC,0CAIJ,yBAAKA,UAAU,8BACb,kBAAC,IAAD,CAAuBA,UAAU,eACjC,iDAGF,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CAAwBA,UAAU,eAClC,+C,+BAON,OAAOiC,KAAK3D,MAAMoE,WAChB,uBAAGvB,QAASc,KAAKU,SAAU3C,UAAU,kBAArC,qCAIAiC,KAAKc,iB,GA5DQb,IAAMC,Y,iBCoDVa,G,kNApDb1E,MAAQ,CACN2E,eAAe,G,EAGjBC,aAAe,WACmB,GAA5B,EAAK5E,MAAM2E,cACb,EAAK1C,SAAS,CACZ0C,eAAe,IAGjB,EAAK1C,SAAS,CACZ0C,eAAe,K,wEAMnB,OACE,yBAAKjD,UAAU,wBACb,iDAEE,kBAAC,IAAD,CACEA,UAAWiC,KAAK3D,MAAM2E,cAAgB,WAAa,GACnD9B,QAASc,KAAKiB,aACdpB,MAAO,CACLqB,SAAU,WACVpB,WAAY,GACZqB,SAAU,OAKhB,2BACE,+CAGF,2BACE,+CAGF,2BACE,yCAGF,0BAAMpD,UAAU,eACd,kBAAC,EAAD,Y,GA9CckC,IAAMC,YCIxBkB,G,kNACJC,UAAY,SAAAC,GAAW,IACbC,EAAqCD,EAArCC,YAAaC,EAAwBF,EAAxBE,OAAQ9F,EAAgB4F,EAAhB5F,YAExB6F,GAIL,EAAKzC,MAAMD,SACTxD,EACEmG,EAAOnB,YACPkB,EAAYlB,YACZmB,EAAOjE,MACPgE,EAAYhE,MACZ7B,K,wEAKI,IACAwB,EAAU8C,KAAKlB,MAAf5B,MAER,OACE,kBAAC,IAAD,CAAiBmE,UAAWrB,KAAKqB,WAC/B,6BACE,kBAAC,EAAD,MACA,yBAAKtD,UAAU,kBACZb,EAAMR,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEd,OAAQc,EAAKT,GACbqE,IAAK5D,EAAKT,GACVlB,MAAO2B,EAAK3B,MACZmB,MAAOQ,EAAKR,WAGhB,kBAAC,EAAD,CAAgBQ,MAAI,W,GAnCduD,cA+CHC,eAJS,SAAA9D,GAAK,MAAK,CAChCa,MAAOb,EAAMa,SAGAiD,CAAyBiB,GCnDxCK,IAASC,OACP,kBAAC,IAAD,CAAUvE,MAAOA,GACf,kBAAC,EAAD,OAEFwE,SAASC,eAAe,U","file":"static/js/main.a1b2eca9.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\n\nexport const addList = title => {\n  return {\n    type: CONSTANTS.ADD_LIST,\n    payload: title\n  };\n};\n\nexport const reOrder = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId\n) => {\n  return {\n    type: CONSTANTS.DRAG_CARD,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId\n    }\n  };\n};\n","import { CONSTANTS } from \"../actions\";\n\nexport const addCard = (listId, content) => {\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { content, listId }\n  };\n};\n","export * from \"./listAction\";\nexport * from \"./cardAction\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_CARD: \"DRAG_CARD\"\n};\n","import { CONSTANTS } from \"../actions\";\n\nlet listId = 3;\nlet cardId = 9;\n\nconst initialState = [\n  {\n    title: \"To Do\",\n    id: `l-${0}`,\n    cards: [\n      { id: `c-${0}`, content: \"Return shoes\" },\n      { id: `c-${1}`, content: \"Call mom\" },\n      { id: `c-${2}`, content: \"Book flight to Hawaii\" },\n      { id: `c-${3}`, content: \"Pick up dry cleaning\" }\n    ]\n  },\n  {\n    title: \"Doing\",\n    id: `l-${1}`,\n    cards: [{ id: `c-${4}`, content: \"Laundry\" }]\n  },\n  {\n    title: \"Done\",\n    id: `l-${2}`,\n    cards: [\n      { id: `c-${5}`, content: \"Go to the bank\" },\n      { id: `c-${6}`, content: \"Get a haircut\" },\n      { id: `c-${7}`, content: \"Schedule band practice\" },\n      { id: `c-${8}`, content: \"Fix bathroom cabinet\" }\n    ]\n  }\n];\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST:\n      const newList = {\n        title: action.payload,\n        cards: [],\n        id: `l-${listId}`\n      };\n      listId += 1;\n      return [...state, newList];\n\n    case CONSTANTS.ADD_CARD: {\n      const newCard = {\n        content: action.payload.content,\n        id: `c-${cardId}`\n      };\n      cardId += 1;\n\n      const newState = state.map(list => {\n        if (list.id === action.payload.listId) {\n          return {\n            ...list,\n            cards: [...list.cards, newCard]\n          };\n        } else {\n          return list;\n        }\n      });\n\n      return newState;\n    }\n\n    case CONSTANTS.DRAG_CARD:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        draggableId\n      } = action.payload;\n      const newState = [...state];\n\n      // dragging within the same list\n      if (droppableIdStart === droppableIdEnd) {\n        // list where drag begins\n        const list = state.find(list => droppableIdStart === list.id);\n\n        // card to be dragged\n        const card = list.cards.splice(droppableIndexStart, 1);\n\n        // list where drag ends\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      // draggin to another list\n      if (droppableIdStart !== droppableIdEnd) {\n        // list where drag begins\n        const listStart = state.find(list => droppableIdStart === list.id);\n\n        // card to be dragged\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n\n        // list where drag ends\n        const listEnd = state.find(list => droppableIdEnd === list.id);\n\n        // insert card in new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\n\nexport default combineReducers({\n    lists: listsReducer\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport \"./BoardCard.scss\";\n\nconst BoardCard = ({ content, id, index }) => {\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Card className=\"card-container\">\n            <CardContent className=\"card-inner\">\n              <Typography gutterBottom>{content}</Typography>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default BoardCard;\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport Textarea from \"react-textarea-autosize\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../../actions\";\n\nimport \"./BoardAddButton.scss\";\n\nclass BoardAddButton extends React.Component {\n  state = {\n    formHidden: true\n  };\n\n  showForm = () => {\n    this.setState({\n      formHidden: false\n    });\n  };\n\n  hideForm = () => {\n    this.setState({\n      formHidden: true\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      content: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { content } = this.state;\n\n    if (content) {\n      // reset list input field to blank\n      this.setState({\n        content: \"\"\n      });\n\n      dispatch(addList(content));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listId } = this.props;\n    const { content } = this.state;\n\n    if (content) {\n      // reset card input field to blank\n      this.setState({\n        content: \"\"\n      });\n\n      dispatch(addCard(listId, content));\n    }\n  };\n\n  renderAddButton = () => {\n    const { list } = this.props;\n    const buttonType = list ? \"Add another list\" : \"Add another card\";\n\n    return (\n      <div\n        onClick={this.showForm}\n        className={\n          \"add-button \" + (list ? \"add-list-button\" : \"add-card-button\")\n        }\n      >\n        <Icon>add</Icon>\n        <p>{buttonType}</p>\n      </div>\n    );\n  };\n\n  renderForm = () => {\n    const { list } = this.props;\n\n    const placeholder = list\n      ? \"Enter list title...\"\n      : \"Enter a title for this card...\";\n    const buttonText = list ? \"Add List\" : \"Add Card\";\n\n    return (\n      <div>\n        <Card className=\"add-form-container\">\n          <Textarea\n            className=\"text-area\"\n            placeholder={placeholder}\n            autoFocus\n            onBlur={this.hideForm}\n            value={this.state.content}\n            onChange={this.handleInputChange}\n          />\n        </Card>\n        <div className=\"form-button-container\">\n          <Button\n            className=\"form-button\"\n            variant=\"contained\"\n            onMouseDown={list ? this.handleAddList : this.handleAddCard} //used instead of onclick, because it will run before onBlur props and using onclick will not add list bcos of that\n          >\n            {buttonText}\n          </Button>\n          <Icon style={{ marginLeft: 8, cursor: \"pointer\" }}>close</Icon>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return this.state.formHidden ? this.renderAddButton() : this.renderForm();\n  }\n}\n\nexport default connect()(BoardAddButton);\n","import React from \"react\";\nimport BoardCard from \"../BoardCard/BoardCard\";\nimport BoardAddButton from \"../BoardAddButton/BoardAddButton\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nimport \"./BoardList.scss\";\n\nconst BoardList = ({ title, cards, listId }) => {\n  return (\n    <Droppable droppableId={String(listId)}>\n      {provided => (\n        <div\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          className=\"container\"\n        >\n          <p className=\"board-list-title\">{title}</p>\n          {cards.map((card, index) => (\n            <BoardCard\n              key={card.id}\n              index={index}\n              content={card.content}\n              id={card.id}\n            />\n          ))}\n          <BoardAddButton listId={listId} />\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default BoardList;\n","import React from \"react\";\n\nimport FilterListOutlinedIcon from \"@material-ui/icons/FilterListOutlined\";\nimport ColorLensOutlinedIcon from \"@material-ui/icons/ColorLensOutlined\";\nimport PersonAddOutlinedIcon from \"@material-ui/icons/PersonAddOutlined\";\nimport \"./Menu.scss\";\n\nclass Menu extends React.Component {\n  state = {\n    menuHidden: true\n  };\n\n  showMenu = () => {\n    this.setState({\n      menuHidden: false\n    });\n  };\n\n  hideMenu = () => {\n    this.setState({\n      menuHidden: true\n    });\n  };\n\n  renderMenu() {\n    return (\n      <div className=\"menu-container\">\n        <span onClick={this.hideMenu}>&#10005;</span>\n        <div className=\"menu-header\">\n          <p>Menu</p>\n        </div>\n        <div className=\"members\">\n          <div className=\"img-container\">\n            <img src=\"https://randomuser.me/api/portraits/men/71.jpg\" alt=\"\" />\n            <img\n              src=\"https://randomuser.me/api/portraits/women/82.jpg\"\n              alt=\"\"\n            />\n            <img src=\"https://randomuser.me/api/portraits/women/6.jpg\" alt=\"\" />\n            <img src=\"https://randomuser.me/api/portraits/men/81.jpg\" alt=\"\" />\n          </div>\n\n          <div className=\"member-invite sub-head\">\n            <PersonAddOutlinedIcon className=\"menu-icons\" />\n            <p>Invite...</p>\n          </div>\n        </div>\n\n        <div className=\"change-background sub-head\">\n          <ColorLensOutlinedIcon className=\"menu-icons\" />\n          <p>Change Background</p>\n        </div>\n\n        <div className=\"filter-card sub-head\">\n          <FilterListOutlinedIcon className=\"menu-icons\" />\n          <p>Filter Cards</p>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.menuHidden ? (\n      <p onClick={this.showMenu} className=\"show-menu-icon\">\n        &#8226;&#8226;&#8226; &nbsp; Show Menu\n      </p>\n    ) : (\n      this.renderMenu()\n    );\n  }\n}\n\nexport default Menu;\n","import React from \"react\";\nimport Menu from \"../Menu/Menu\";\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\n\nimport \"./BoardMenu.scss\";\n\nclass BoardMenu extends React.Component {\n  state = {\n    favoriteBoard: false\n  };\n\n  markFavorite = () => {\n    if (this.state.favoriteBoard == false) {\n      this.setState({\n        favoriteBoard: true\n      });\n    } else {\n      this.setState({\n        favoriteBoard: false\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"board-menu-container\">\n        <h3>\n          Things To Get Done\n          <StarBorderOutlinedIcon\n            className={this.state.favoriteBoard ? \"favorite\" : \"\"}\n            onClick={this.markFavorite}\n            style={{\n              position: \"absolute\",\n              marginLeft: 10,\n              fontSize: 20\n            }}\n          />\n        </h3>\n\n        <p>\n          <span>Team Awesome</span>\n        </p>\n\n        <p>\n          <span>Team Visible</span>\n        </p>\n\n        <p>\n          <span>Invite</span>\n        </p>\n\n        <span className=\"menu-toggle\">\n          <Menu />\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default BoardMenu;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport BoardList from \"./BoardList/BoardList\";\nimport BoardAddButton from \"./BoardAddButton/BoardAddButton\";\nimport BoardMenu from \"./BoardMenu/BoardMenu\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { reOrder } from \"../actions\";\n\nimport \"./App.scss\";\n\nclass App extends Component {\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      reOrder(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId\n      )\n    );\n  };\n\n  render() {\n    const { lists } = this.props;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div>\n          <BoardMenu />\n          <div className=\"list-container\">\n            {lists.map(list => (\n              <BoardList\n                listId={list.id}\n                key={list.id}\n                title={list.title}\n                cards={list.cards}\n              />\n            ))}\n            <BoardAddButton list />\n          </div>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}